hydra:
  run:
    dir: data/outputs_0606_pre_pointnet/rotate_2048-dp3-0112_seed50/relu/pointnet/skipnet
  sweep:
    dir: data/outputs/${task.name}/${training.seed}/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.run.dir=data/outputs_0606_pre_pointnet/rotate_2048-dp3-0112_seed50/relu/pointnet/skipnet
    - hydra.mode=RUN
    task:
    - task=rotate_2048
    - training.debug=False
    - training.seed=50
    - training.device=cuda:0
    - exp_name=rotate_2048-dp3-0112
    - logging.mode=offline
    - checkpoint.save_ckpt=True
    - unio4.bppo_lr=1e-6
    - unio4.rollout_length=25
    - training.resume=True
    - policy._target_=diffusion_policy_3d.policy.dp3.DP3
    - policy.ddim_noise_scheduler.num_train_timesteps=50
    - policy.cm_noise_scheduler.num_train_timesteps=50
    - use_action_embed=True
    - horizon=3
    - n_action_steps=1
    - n_obs_steps=3
    - ft_all_actions=False
    - num_inference_steps=10
    - policy.model=skipnet
    - policy.encoder_type=pointnet
    - policy.act=relu
    - unio4.bppo_steps=5000
    - policy.encoder_output_dim=64
    - policy.diffusion_step_embed_dim=256
    - policy.down_dims=[256,512,1024]
    - task.env_runner.eval_episodes=20
    - task.env_runner.env_num=1
    - offline=True
    - policy.scheduler_type=ddim
    - policy.use_agent_pos=True
    - only_bc=True
    - unio4.idql_eval=True
    - policy.mlp_policy_depth=3
    - task.env_runner.fake_env=True
    - task.dataset.zarr_path=data/data_rotate_2048_0606_1_pre.zarr
    - use_wandb=True
    - critic.omega=0.7
    - critic.gamma=0.99
    - task.shape_meta.obs.point_cloud.shape=[2048,6]
    - task.dataset._target_=diffusion_policy_3d.dataset.rotate_dataset_pc.RotateDataset
    - policy.use_pc_color=True
  job:
    name: train
    chdir: null
    override_dirname: checkpoint.save_ckpt=True,critic.gamma=0.99,critic.omega=0.7,exp_name=rotate_2048-dp3-0112,ft_all_actions=False,horizon=3,logging.mode=offline,n_action_steps=1,n_obs_steps=3,num_inference_steps=10,offline=True,only_bc=True,policy._target_=diffusion_policy_3d.policy.dp3.DP3,policy.act=relu,policy.cm_noise_scheduler.num_train_timesteps=50,policy.ddim_noise_scheduler.num_train_timesteps=50,policy.diffusion_step_embed_dim=256,policy.down_dims=[256,512,1024],policy.encoder_output_dim=64,policy.encoder_type=pointnet,policy.mlp_policy_depth=3,policy.model=skipnet,policy.scheduler_type=ddim,policy.use_agent_pos=True,policy.use_pc_color=True,task.dataset._target_=diffusion_policy_3d.dataset.rotate_dataset_pc.RotateDataset,task.dataset.zarr_path=data/data_rotate_2048_0606_1_pre.zarr,task.env_runner.env_num=1,task.env_runner.eval_episodes=20,task.env_runner.fake_env=True,task.shape_meta.obs.point_cloud.shape=[2048,6],task=rotate_2048,training.debug=False,training.device=cuda:0,training.resume=True,training.seed=50,unio4.bppo_lr=1e-6,unio4.bppo_steps=5000,unio4.idql_eval=True,unio4.rollout_length=25,use_action_embed=True,use_wandb=True
    id: ???
    num: ???
    config_name: dp3.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.2.0
    version_base: '1.2'
    cwd: /data/lk/lk_projs/ft-dp3/3D-Diffusion-Policy
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /data/lk/lk_projs/ft-dp3/3D-Diffusion-Policy/diffusion_policy_3d/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /data/lk/lk_projs/ft-dp3/3D-Diffusion-Policy/data/outputs_0606_pre_pointnet/rotate_2048-dp3-0112_seed50/relu/pointnet/skipnet
    choices:
      task: rotate_2048
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
